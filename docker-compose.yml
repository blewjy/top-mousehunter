services:

  bot:
    build: ./bot
    image: bot
    container_name: bot
    volumes:
      - logs:/logs

  captcha:
    build: ./captcha
    image: captcha
    container_name: captcha
    volumes:
      - captcha-images:/data
      - logs:/logs

  scheduler:
    build: ./scheduler
    image: scheduler
    container_name: scheduler
    volumes:
      - logs:/logs

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.5.0
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    network_mode: bridge
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  kibana:
    container_name: kibana
    image: kibana:7.5.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 5601:5601
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true
    network_mode: bridge
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  logstash:
    container_name: logstash
    image: logstash:7.5.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true
    network_mode: bridge
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
  filebeat:
    user: root
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:7.5.0
    links:
      - logstash:logstash
    depends_on:
      - logstash
    volumes:
      - /var/run/docker.sock:/host_docker/docker.sock
      - /var/lib/docker:/host_docker/var/lib/docker
      - logs:/usr/share/filebeat/logs
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
    command: ["--strict.perms=false"]
    ulimits:
      memlock:
        soft: -1
        hard: -1
    stdin_open: true
    tty: true
    network_mode: bridge
    deploy:
      mode: global
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"

volumes:
  captcha-images:
  logs:

# docker-compose command
# > docker-compose up --build -d